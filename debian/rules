#!/usr/bin/make -f
# Sample debian/rules that uses debhelper.
# GNU copyright 1997 to 1999 by Joey Hess.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
export DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
export DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

ifeq ($(DEB_BUILD_GNU_TYPE), $(DEB_HOST_GNU_TYPE))
        confflags += --build $(DEB_HOST_GNU_TYPE)
else
        confflags += --build $(DEB_BUILD_GNU_TYPE) --host $(DEB_HOST_GNU_TYPE)
endif

ifneq (,$(findstring debug,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -g
endif
ifeq (,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
	INSTALL_PROGRAM += -s
endif

patched_files = ccache.c stats.c util.c \
	ccache.1 ccache.h ccache.yo config.h.in \
	configure configure.in Makefile.in \
	web/ccache-man.html web/index.html

config.status: patch configure-stamp
configure-stamp:
	dh_testdir
ifneq "$(wildcard /usr/share/misc/config.sub)" ""
	cp -f /usr/share/misc/config.sub config.sub
endif
ifneq "$(wildcard /usr/share/misc/config.guess)" ""
	cp -f /usr/share/misc/config.guess config.guess
endif
	./configure $(confflags) --prefix=/usr --mandir=\$${prefix}/share/man --infodir=\$${prefix}/share/info
	touch $@

patch: patch-stamp
patch-stamp:
	for ufile in $(patched_files); do \
		[ -f "$(CURDIR)/$$ufile" ] || continue; \
		[ ! -f "$(CURDIR)/$$ufile.unpatched" ] || continue; \
		echo "### Saving unpatched file $$ufile"; \
		cp -f "$(CURDIR)/$$ufile" "$(CURDIR)/$$ufile.unpatched"; \
	done
	mkdir -p debian/patched
	for pfile in debian/patches/*.diff; do \
		[ -f "$$pfile" ] || continue; \
		pname="$$(basename $$pfile .diff)"; \
		[ ! -f "debian/patched/$$pname.patched" ] || continue; \
		echo "### Applying patch $$pname"; \
		patch -p1 -N < $$pfile; \
		cp -f "$$pfile" "debian/patched/$$pname.patched"; \
	done
	chmod +x $(CURDIR)/manage-cache.sh
	touch $@

build: build-stamp
build-stamp: config.status
	dh_testdir
	$(MAKE)
	touch $@

clean: clean-patched unpatch
clean-patched:
	dh_testdir
	dh_testroot
	rm -f build-stamp configure-stamp
	[ ! -f Makefile ] || $(MAKE) distclean
	rm -f config.guess config.sub
	dh_clean

unpatch:
	for ufile in $(patched_files); do \
		[ -f "$(CURDIR)/$$ufile.unpatched" ] || continue; \
		echo "### Restoring unpatched file $$ufile"; \
		mv -f "$(CURDIR)/$$ufile.unpatched" "$(CURDIR)/$$ufile"; \
	done
	rm -f $(CURDIR)/manage-cache.sh
	rm -rf debian/patched patch-stamp

install: build
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs

	# Add here commands to install the package into debian/ccache.
	$(MAKE) install prefix=$(CURDIR)/debian/ccache/usr

	ln -s ../../bin/ccache $(CURDIR)/debian/ccache/usr/lib/ccache/$(DEB_BUILD_GNU_TYPE)-gcc
	ln -s ../../bin/ccache $(CURDIR)/debian/ccache/usr/lib/ccache/$(DEB_BUILD_GNU_TYPE)-g++
	set -e; for ver in 2.95 3.0 3.2 3.3 3.4 4.0 4.1 4.2 4.3 4.4; do \
		ln -s ../../bin/ccache $(CURDIR)/debian/ccache/usr/lib/ccache/$(DEB_BUILD_GNU_TYPE)-gcc-$$ver; \
		ln -s ../../bin/ccache $(CURDIR)/debian/ccache/usr/lib/ccache/gcc-$$ver; \
		ln -s ../../bin/ccache $(CURDIR)/debian/ccache/usr/lib/ccache/$(DEB_BUILD_GNU_TYPE)-g++-$$ver; \
		ln -s ../../bin/ccache $(CURDIR)/debian/ccache/usr/lib/ccache/g++-$$ver; \
	done
	ln -s ../../bin/ccache $(CURDIR)/debian/ccache/usr/lib/ccache/cc
	ln -s ../../bin/ccache $(CURDIR)/debian/ccache/usr/lib/ccache/c++
	ln -s ../../bin/ccache $(CURDIR)/debian/ccache/usr/lib/ccache/gcc
	ln -s ../../bin/ccache $(CURDIR)/debian/ccache/usr/lib/ccache/g++
	ln -s ../../bin/ccache $(CURDIR)/debian/ccache/usr/lib/ccache/i586-mingw32msvc-c++
	ln -s ../../bin/ccache $(CURDIR)/debian/ccache/usr/lib/ccache/i586-mingw32msvc-cc
	ln -s ../../bin/ccache $(CURDIR)/debian/ccache/usr/lib/ccache/i586-mingw32msvc-g++
	ln -s ../../bin/ccache $(CURDIR)/debian/ccache/usr/lib/ccache/i586-mingw32msvc-gcc

# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installdocs
	dh_installexamples
	dh_installmenu
	dh_installcron
	dh_installman
	dh_installinfo
	dh_installchangelogs 
	dh_link
	dh_strip
	dh_compress
	dh_fixperms
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install patch unpatch
